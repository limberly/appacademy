q
game.render
game.move([1, 0], [4,1])
continue
n
game[[4,1]].empty?
game[[4,1]]
self[[4,1]]
game.render
q
board
@board
q
@board
q
win_game
win_Game
q
win_game
wingame
q
self
win_game
q
@board
q
start_pos
self[start_pos][0]
self[row_below_end_pos][0]
q
start_pos
self[start_pos][0]
self[end_pos][0]
self[row_below_end_pos][0]
@board
row_below_end_pos
self[row_below_end_pos]
n
s
continue
n
s
continue
q
@board[0][1]
@board[0][0]
@board[0]
@board
print self[0]
puts self[0]
self
self[0][0]
self[1]
self[0]
@board
self[start_pos]
start_pos
self[start_pos].clone
self[end_pos]
n
end_pos
n
s
continue
n
s
continue
n
s
q
row_below_end_pos
self[row_below_end_pos]
n
s
continue
n
s
q
@board
@board[5][1]
end_pos
n
s
q
self[end_pos]
n
s
continue
n
s
continue
n
s
continue
n
s
continue
n
@board[row] == nil
n
s
q
@board[row][col]
@board[row]
@board[row][col]
n
s
q
@board[row_below_end_pos]
row_below_end_pos
end_pos
end_ps
n
s
q
[-1, 0, 2, -2, 1].two_sum
