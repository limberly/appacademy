continue
q
attribute_values
attribute_values.shift
attribute_values
continue
col_names
q
col_names
q
col_names.pop(idx)
col_names
idx
idx_val
q
col_names
q
question_marks.join(',')
question_marks
q
attribute_values.length
col_names
question_marks
*attribute_values
attribute_values
q
name
self.class.columns
self.class
self
self.
n
s
self
n
s
q
self.new(results[0])
results
self
slef
q
self.new.finalize!
self.new
self.attributes
self
Cat.new(hash)
hash
self.columns
self.class.attributes
self.class
self.attributes
self.finalize!
self
kitty.attributes
Cat.finalize!
kitty.finalize!
kitty.columns
kitty.attributes
kitty.id
kitty = self.new
self.new(hash)
hash
self
q
self.class.columns
self.columns
self
self.new.attributes
self.new
self.new(results[0])
self
results[0]
show h
h
s
results
self
q
self.object_id
self.object
self.id
self
s
n
self
s
self.attributes
self.class
self
q
n
self
n
self
q
scope
self
q
self.attributes
@attributes
q
exit
n
q
exit
n
self.name
@attributes[column]
column
@attributes
q
@attributes
self.attributes
q
self.attributes
self
exit
q
c.class.owner_id
c.class.columns
c.columns
c.class.name
c.class.id
c.class.table_name
c.table_name
q
c.id
c.name
q
self.id
@attributes
q
@attributes
q
column.to_s+'='
self.id
n
self.id
display column
q
n
display column
column
q
@columns
q
self.to_s.tableize
self.to_s
self.to_S
self.is_a?(String)
self.tableize
self.class
self
q
obj.@x
obj.x
obj
q
self.class
self
'@'+name.to_s
self.instance_variable_get('@'+name.to_s)
self.instance_variable_get(name)
name
names
name
q
n
